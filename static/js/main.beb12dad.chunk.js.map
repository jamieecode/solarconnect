{"version":3,"sources":["components/Timer.js","components/validateNumber.js","utils/heapSort/index.js","components/Input.js","utils/bubblesort/index.js","App.js","index.js"],"names":["Timer","country","useState","Date","time","setTime","useEffect","id","setInterval","clearInterval","getFullYear","getMonth","getDate","getDay","toLocaleTimeString","isNumeric","value","test","heapify","arr","lastIdx","idx","parseInt","left","right","temp","Form","styled","form","Result","div","Input","inputValue","setInputValue","ascendResult","setAscendResult","descendResult","setDescendResult","onSubmit","e","preventDefault","inputValueArray","replace","split","every","stringToNum","map","string","ascendSorted","array","i","j","length","bubbleSort","join","descendSorted","heapAscending","reverse","setTimeout","alert","type","placeholder","onChange","target","Container","section","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.beb12dad.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst Timer = ({ country }) => {\r\n  const [time, setTime] = useState(new Date());\r\n\r\n  useEffect(() => {\r\n    const id = setInterval(() => setTime(new Date()), 1000);\r\n    return () => {\r\n      clearInterval(id);\r\n    };\r\n  }, []);\r\n\r\n  const getKrDay = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"];\r\n  const getUsDay = [\"Sun\", \"Mon\", \"Tues\", \"Wednes\", \"Thurs\", \"Fri\", \"Satur\"];\r\n  const getUsMonth = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      {country === \"korea\" ? (\r\n        <h2>\r\n          {`${time.getFullYear()}년 ${\r\n            time.getMonth() + 1\r\n          }월 ${time.getDate()}일 ${\r\n            getKrDay[time.getDay()]\r\n          }요일 ${time.toLocaleTimeString()}`}\r\n        </h2>\r\n      ) : (\r\n        <h2>\r\n          {`${getUsDay[time.getDay()]}day ${\r\n            getUsMonth[time.getMonth()]\r\n          } ${time.getDate()}, ${time.getFullYear()}  ${time.toLocaleTimeString(\r\n            \"en-US\"\r\n          )}`}\r\n        </h2>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n","export const isNumeric = (value) => {\r\n  return /^-?\\d+$/.test(value);\r\n};\r\n","const heapify = (arr, lastIdx) => {\r\n  let idx = parseInt(lastIdx / 2) - 1;\r\n\r\n  while (idx >= 0) {\r\n    const left = arr[idx * 2 + 1];\r\n    const right = arr[idx * 2 + 2];\r\n\r\n    if (left >= right && arr[idx] < left) {\r\n      const temp = arr[idx];\r\n      arr[idx] = arr[idx * 2 + 1];\r\n      arr[idx * 2 + 1] = temp;\r\n    } else if (right > left && arr[idx] < right) {\r\n      const temp = arr[idx];\r\n      arr[idx] = arr[idx * 2 + 2];\r\n      arr[idx * 2 + 2] = temp;\r\n    }\r\n    idx--;\r\n  }\r\n  return arr;\r\n};\r\n\r\nexport const heapAscending = (arr) => {\r\n  for (let i = arr.length - 1; i >= 0; i--) {\r\n    arr = heapify(arr, i);\r\n\r\n    if (arr[0] > arr[i]) {\r\n      const temp = arr[i];\r\n      arr[i] = arr[0];\r\n      arr[0] = temp;\r\n    }\r\n  }\r\n  return arr;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { isNumeric } from \"./validateNumber\";\r\nimport { bubbleSort } from \"../utils/bubblesort/index\";\r\nimport { heapAscending } from \"../utils/heapSort/index\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Form = styled.form`\r\n  padding: 1em;\r\n  width: 40%;\r\n  background-color: #bcd4e6;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  button {\r\n    background-color: #669bbc;\r\n    cursor: pointer;\r\n    border: none;\r\n    color: #fff;\r\n    font-weight: bold;\r\n    font-size: 1.1rem;\r\n    padding: 0.5em 1em;\r\n    border-radius: 0.5em;\r\n  }\r\n\r\n  button:hover {\r\n    transform: scale(1.1);\r\n    transition: 0.2s all;\r\n  }\r\n\r\n  input {\r\n    padding: 1em;\r\n    width: 80%;\r\n    margin: 1em;\r\n  }\r\n`;\r\n\r\nconst Result = styled.div`\r\n  background-color: #bcd4e6;\r\n  width: 40%;\r\n  padding: 1em;\r\n  margin-top: 1em;\r\n`;\r\n\r\nconst Input = () => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [ascendResult, setAscendResult] = useState(\"\");\r\n  const [descendResult, setDescendResult] = useState(\"\");\r\n\r\n  const onChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    //빈칸제거\r\n    const inputValueArray = inputValue.replace(/ /g, \"\").split(\",\");\r\n\r\n    if (!inputValue) {\r\n      alert(\"입력한 값이 없습니다.\");\r\n      setInputValue(\"\");\r\n    } else if (!inputValueArray.every(isNumeric)) {\r\n      alert(\"숫자만 입력해주세요\");\r\n      setInputValue(\"\");\r\n    } else if (inputValueArray.every(isNumeric)) {\r\n      const stringToNum = inputValueArray.map((string) => parseInt(string, 10));\r\n      const ascendSorted = bubbleSort(stringToNum).join(\",\");\r\n      const descendSorted = heapAscending(stringToNum).reverse().join(\",\");\r\n\r\n      setAscendResult(ascendSorted);\r\n\r\n      setTimeout(() => {\r\n        setDescendResult(descendSorted);\r\n      }, 3000);\r\n\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form onSubmit={onSubmit}>\r\n        <label>\r\n          <h3>숫자를 입력해주세요. 예) 1,2,3,4</h3>\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"숫자를 입력하세요\"\r\n          value={inputValue}\r\n          onChange={onChange}\r\n        />\r\n        <button type=\"submit\">시작</button>\r\n      </Form>\r\n      <Result>\r\n        <h3>오름차순: {ascendResult}</h3>\r\n      </Result>\r\n      <Result>\r\n        <h3>내림차순: {descendResult}</h3>\r\n      </Result>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","export const bubbleSort = (array) => {\r\n  let i, j, temp;\r\n  for (i = 0; i < array.length - 1; i++) {\r\n    for (j = 0; j < array.length - 1 - i; j++) {\r\n      if (array[j] > array[j + 1]) {\r\n        temp = array[j];\r\n        array[j] = array[j + 1];\r\n        array[j + 1] = temp;\r\n      }\r\n    }\r\n  }\r\n  return array;\r\n};\r\n","import Timer from \"./components/Timer\";\nimport Input from \"./components/Input\";\nimport styled from \"styled-components\";\n\nconst Container = styled.section`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n`;\n\nfunction App() {\n  return (\n    <Container className=\"App\">\n      <h1>Sorting Machine</h1>\n      <Timer country=\"korea\" />\n      <Input />\n      <Timer country=\"america\" />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}